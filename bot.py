import os
import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—à—å –ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ –≤ Replit)
from dotenv import load_dotenv
load_dotenv()

# –¢–æ–∫–µ–Ω—ã –∏–∑ .env –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ .env –Ω–µ –ø–æ–¥—Ö–≤–∞—Ç–∏–ª—Å—è)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN") or "8306127980:AAHGXcF1rA-Sg0ACbvG6j3i5diOBUDCQBjI"
KINOPOISK_API_KEY = os.getenv("KINOPOISK_API_KEY") or "FB86TF8-K4V4FTQ-NQ8J2SY-7P6WV49"

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

# ‚úÖ –¢–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Kinopoisk.dev
GENRES = [
    "–∞–Ω–∏–º–µ", "–±–∏–æ–≥—Ä–∞—Ñ–∏—è", "–±–æ–µ–≤–∏–∫", "–≤–µ—Å—Ç–µ—Ä–Ω", "–≤–æ–µ–Ω–Ω—ã–π", "–¥–µ—Ç–µ–∫—Ç–∏–≤", "–¥–µ—Ç—Å–∫–∏–π",
    "–¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π", "–¥—Ä–∞–º–∞", "–∏–≥—Ä–∞", "–∏—Å—Ç–æ—Ä–∏—è", "–∫–æ–º–µ–¥–∏—è", "–∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∞",
    "–∫—Ä–∏–º–∏–Ω–∞–ª", "–º–µ–ª–æ–¥—Ä–∞–º–∞", "–º–∏—Å—Ç–∏–∫–∞", "–º—É–ª—å—Ç—Ñ–∏–ª—å–º", "–º—é–∑–∏–∫–ª", "–Ω–æ–≤–æ—Å—Ç–∏",
    "–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "—Ä–µ–∞–ª—å–Ω–æ–µ –¢–í", "—Å–µ–º–µ–π–Ω—ã–π", "—Å–ø–æ—Ä—Ç", "—Ç—Ä–∏–ª–ª–µ—Ä", "—É–∂–∞—Å—ã",
    "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "—Ñ—ç–Ω—Ç–µ–∑–∏", "—Ü–µ—Ä–µ–º–æ–Ω–∏—è"
]

def get_genre_keyboard():
    buttons = []
    for genre in GENRES:
        buttons.append(InlineKeyboardButton(text=genre.capitalize(), callback_data=f"genre:{genre}"))
    keyboard = [buttons[i:i + 3] for i in range(0, len(buttons), 3)]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def fetch_movies_by_genre(genre: str):
    url = "https://api.kinopoisk.dev/v1/movie"
    headers = {"X-API-KEY": KINOPOISK_API_KEY}
    params = {
        "genres.name": genre,
        "page": 1,
        "limit": 20,
        "rating.kp": "4.5-10"  # –∫–∞–∫ —Ç—ã –ø—Ä–æ—Å–∏–ª
    }
    try:
        response = requests.get(url, headers=headers, params=params, timeout=10)
        print(f"üîç –ó–∞–ø—Ä–æ—Å: –∂–∞–Ω—Ä={genre}")
        print(f"üì° –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            movies = data.get("docs", [])
            print(f"‚úÖ –§–∏–ª—å–º–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {len(movies)}")
            return movies
        else:
            print(f"‚ùå API –æ—à–∏–±–∫–∞: {response.text}")
            return []
    except Exception as e:
        print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
        return []

@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.answer(
        "üé¨ –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∫—Ä—É—Ç—ã–µ —Ñ–∏–ª—å–º—ã.\n\n"
        "–ù–∞–∂–º–∏ –Ω–∞ –∂–∞–Ω—Ä –Ω–∏–∂–µ, –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –æ—Ç 4.5+!",
        reply_markup=get_genre_keyboard()
    )

@dp.callback_query_handler(lambda c: c.data.startswith("genre:"))
async def process_genre_callback(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    genre = callback_query.data.split(":", 1)[1]
    movies = fetch_movies_by_genre(genre)
    if movies:
        for movie in movies[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            title = movie.get("name") or movie.get("alternativeName") or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
            year = movie.get("year", "‚Äî")
            rating = movie.get("rating", {}).get("kp", "‚Äî")
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = f"üé• <b>{title}</b> ({year})\n‚≠ê –†–µ–π—Ç–∏–Ω–≥: {rating}"
            await bot.send_message(callback_query.from_user.id, msg, parse_mode="HTML")
    else:
        await bot.send_message(
            callback_query.from_user.id,
            f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –∂–∞–Ω—Ä—É ¬´{genre}¬ª —Å–µ–π—á–∞—Å –Ω–µ—Ç —Ñ–∏–ª—å–º–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º ‚â•4.5.\n"
            "–ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –∂–∞–Ω—Ä!",
            reply_markup=get_genre_keyboard()
        )

if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"üîë Telegram Token (—á–∞—Å—Ç–∏—á–Ω–æ): ...{TELEGRAM_TOKEN[-5:]}")
    print(f"üîë Kinopoisk API Key (—á–∞—Å—Ç–∏—á–Ω–æ): ...{KINOPOISK_API_KEY[-5:]}")
    executor.start_polling(dp, skip_updates=True)
